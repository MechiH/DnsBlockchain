<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Blockchain Domain Registry</title>
    <style>
      .container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }

      table {
        border-collapse: collapse;
        margin-top: 1rem;
      }

      table th,
      table td {
        padding: 0.5rem;
        border: 1px solid black;
      }

      table th {
        text-align: left;
        background-color: #eee;
      }
    </style>
  </head>
  <body>
    <h1>Blockchain Domain Registry</h1>

    <div class="container">
      <h2>Register Domain</h2>
      <form id="register-domain-form">
        <label for="public-key">Public Key:</label>
        <select id="public-key" required>
          <% Object.keys(wallets).forEach(publicKey => { %>
          <option value="<%= publicKey %>"><%= publicKey %></option>
          <% }); %>
        </select>
        <label for="domain">Domain:</label>
        <input type="text" id="domain" required />
        <label for="ip">IP:</label>
        <input type="text" id="ip" required />
        <button type="submit">Register Domain</button>
      </form>

      <h2>Transfer Domain</h2>
      <form id="transfer-domain-form">
        <label for="public-key">Public Key:</label>
        <select id="public-key" required>
          <% Object.keys(wallets).forEach(publicKey => { %>
          <option value="<%= publicKey %>"><%= publicKey %></option>
          <% }); %>
        </select>
        <label for="domain">Domain:</label>
        <input type="text" id="domain-transform" required />
        <label for="new-owner">New Owner:</label>
        <select id="new-owner" required>
          <% Object.keys(wallets).forEach(publicKey => { %>
          <option value="<%= publicKey %>"><%= publicKey %></option>
          <% }); %>
        </select>
        <button type="submit">Transfer Domain</button>
      </form>

      <h2>Mine Block</h2>
      <form id="mine-block-form">
        <label for="public-key">Public Key:</label>
        <select id="public-key" required>
          <% Object.keys(wallets).forEach(publicKey => { %>
          <option value="<%= publicKey %>"><%= publicKey %></option>
          <% }); %>
        </select>
        <button type="submit">Mine Block</button>
      </form>
    </div>

    <h2>Registered Domains</h2>
    <table>
      <thead>
        <tr>
          <th>Domain</th>
          <th>IP</th>
          <th>Owner</th>
        </tr>
      </thead>
      <tbody>
        <% domains.forEach(domain => { %>
        <tr>
          <td><%= domain.domain %></td>
          <td><%= domain.ip %></td>
          <td><%= domain.owner %></td>
        </tr>
        <% }); %>
      </tbody>
    </table>

    <script>
      // Get form elements
      const registerDomainForm = document.getElementById(
        "register-domain-form"
      );
      const transferDomainForm = document.getElementById(
        "transfer-domain-form"
      );
      const mineBlockForm = document.getElementById("mine-block-form");

      // Helper function for making AJAX requests
      async function makeRequest(url, method, data) {
        const response = await fetch(url, {
          method,
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.text();
      }

      // Handle Register Domain form submission
      registerDomainForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const publicKey = document.getElementById("public-key").value;
        const domain = document.getElementById("domain").value;
        const ip = document.getElementById("ip").value;

        const formData = new FormData();
        formData.append("publicKey", publicKey);
        formData.append("domain", domain);
        formData.append("ip", ip);
        const data = Object.fromEntries(formData);

        try {
          await makeRequest("/register-domain", "POST", data);
          window.location.reload();
        } catch (error) {
          console.error("Error:", error);
        }
      });

      // Handle Transfer Domain form submission
      transferDomainForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const publicKey = document.getElementById("public-key").value;
        const domain = document.getElementById("domain-transform").value;
        const newOwner = document.getElementById("new-owner").value;

        const formData = new FormData();
        formData.append("publicKey", publicKey);
        formData.append("domain", domain);
        formData.append("newOwner", newOwner);
        const data = Object.fromEntries(formData);

        try {
          await makeRequest("/transfer-domain", "POST", data);
          window.location.reload();
        } catch (error) {
          console.error("Error:", error);
        }
      });

      // Handle Mine Block form submission
      mineBlockForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const publicKey = document.getElementById("public-key").value;

        const formData = new FormData();
        formData.append("publicKey", publicKey);

        try {
          await makeRequest("/mine-block", "POST", formData);
          window.location.reload();
        } catch (error) {
          console.error("Error:", error);
        }
      });
    </script>
  </body>
</html>
